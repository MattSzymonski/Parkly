#spring.datasource.url= jdbc:postgresql://localhost:5433/pw-lab
# spring.datasource.url= jdbc:mysql://localhost:3306/pw2020?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
# spring.datasource.username= pw2020
# spring.datasource.password= MysqL12!@

spring.datasource.url = jdbc:mysql://localhost:3306/parkly?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true

spring.datasource.username = root
spring.datasource.password = root
spring.datasource.initialization-mode = always
spring.datasource.continue-on-error = true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true
spring.jpa.generate-ddl = true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true

## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled = true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold = 2KB
# Max file size.
spring.servlet.multipart.max-file-size = 200MB
# Max Request Size
spring.servlet.multipart.max-request-size = 215MB

cors.urls=*
cors.mappings=/**


# Bookly backend users address endpoint
bookly.users.address.endpoint = http://booklybackend-env.eba-pzvyseyf.us-east-2.elasticbeanstalk.com/v1/users
# API key needed to authenticate requests to Bookly backend
bookly.api.key = f0e9b356-d597-4cbf-b8ef-4f61d038f66d